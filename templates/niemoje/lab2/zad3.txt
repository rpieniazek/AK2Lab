.data
	znak: .ascii "0\n"
	error_msg: .ascii "woops! Something went wrong\0"
.text
.global _start
_start:
	mov (%rsp), %r9
	cmp $3, %r9
	jne error

	mov $2, %rax
	mov 16(%rsp), %rdi
	mov $02, %rsi
	syscall

	mov %rax, %r8
	mov $9, %rax
	mov $0, %rdi
	mov $4096, %rsi
	mov $3, %rdx
	mov $1, %r10
	mov $0, %r9
	syscall

	mov $0, %rcx
	mov (%rax, %rcx,1), %r9b
	mov %r9b, %r12b
odczyt:
	inc %rcx
	mov (%rax, %rcx, 1), %r8b

	cmp $10, %r8b
	je wybor
	cmp %r9b, %r8b
	jg wieksza
	cmp %r12b, %r8b
	jl mniejsza
	jmp odczyt
wieksza:
	mov %r8, %r9
	jmp odczyt
mniejsza:
	mov %r8, %r12
	jmp odczyt
wybor:
	mov %rax, %rdi
	mov $11, %rax
	syscall

	mov 24(%rsp), %rbp
	mov $0, %rcx
	mov (%rbp, %rcx, 1), %r8b
	sub $48, %r8
break1:
	cmp $1, %r8
	je w_wieksza
	cmp $2, %r8
	je w_mniejsza
	jmp error
break2:

w_wieksza:
	mov %r9b, znak
	jmp print

w_mniejsza:
	mov %r12b, znak
	jmp print

print:
	mov $1, %rax
	mov $1, %rdi
	mov $znak, %rsi
	mov $2, %rdx
	syscall
exit:
	mov $60, %rax
	mov $0, %rdi
	syscall
error:
	mov $1, %rax
	mov $1, %rdi
	mov $error_msg, %rsi
	mov $28, %rdx
	syscall
	jmp exit
